let mongoose,express,port,mongoUrl,MoviesRoute,engine,methodOverride;_46e‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_46e‍.w("express",[["default",["express"],function(v){express=v}]]);_46e‍.w("./config/index",[["port",["port"],function(v){port=v}],["mongoUrl",["mongoUrl"],function(v){mongoUrl=v}]]);_46e‍.w("./routes/auth/movies",[["default",["MoviesRoute"],function(v){MoviesRoute=v}]]);_46e‍.w("express-handlebars",[["engine",["engine"],function(v){engine=v}]]);_46e‍.w("method-override",[["default",["methodOverride"],function(v){methodOverride=v}]]);





// import CollectionSchema from '../../Model/Collection_Auth';


const app=express()

//set viewengines
app.engine('handlebars',engine())
app.set('view engine','handlebars')

app.use(express.urlencoded())
//method override
app.use(methodOverride("_method"))
//ends here

//dbconnecion
let dbconnect=async ()=>{
    try
    {
      await mongoose.connect(mongoUrl)
        console.log('db connected');
    }catch(err){
        _46e‍.g.console.log(err);
    }
}
//static
app.use(express.static(__dirname+'/public'))

//router connection mount
app.get('/', async (req,res)=>{
    let collectionMovies= await CollectionSchema.find({}).lean();
    _46e‍.g.console.log(collectionMovies);
    res.render('home',{collectionMovies})
    // res.render('home')
})

//mount routes
app.use('/movies',MoviesRoute)



//port listen
app.listen(port,err=>{
    if(err) throw err;
    console.log('port no 5000');
})
dbconnect()